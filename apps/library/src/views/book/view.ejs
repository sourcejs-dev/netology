<%- include('../layout/start', { title }) %>

<div class="container">
	<a href="/api/user/books" class="btn btn-primary mt-2">Вернуться назад</a>
	<div class="row mt-4 position-relative">
		<div class="col-md-8">
			<!-- <a href="/api/user/books" class="btn btn-primary mb-4" style="width: 200px"
				>Вернуться назад</a
			> -->
			<img
				src="/static/images/<%= book.fileBook %>"
				class="img-fluid rounded shadow w-100"
				alt="Responsive image"
				style="height: 400px; object-fit: cover"
			/>

			<h6 class="mt-3"><b>Авторы: </b> <%= book.authors %></h6>
			<% if (book.favorite) { %>
			<small class="text-secondary d-block"
				><i>Книга добавлена в "Любимые"</i></small
			>
			<% } %>

			<div class="text-center w-100 mx-auto mt-3" style="max-width: 700px">
				<h1><%= book.title %></h1>
				<p><%= book.description %></p>
			</div>
		</div>
		<div class="col-md-4">
			<div class="sticky-top"><%- include('./chat') %></div>
		</div>
	</div>
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
	const messages = document.querySelector('.chat__messages');
	const cardBody = document.querySelector('.card-body');
	const btnSend = document.querySelector('.js-btn-send');
	const inputText = document.querySelector('.js-text');

	const roomName = location.pathname.split('/').pop();
	const socket = io.connect('/', { query: `roomName=${roomName}` });

	const renderMessage = (data) => {
		const { message, name, user, username } = data;
		const date = new Date();
		const template = `<div class="chat__message">
					<div class="d-flex justify-content-between">
						<p class="small mb-1">${username.slice(0, 5)}</p>
						<p class="small mb-1 text-muted">${
							date.getHours() + ':' + date.getMinutes()
						}</p>
					</div>

					${
						user
							? `<div class="d-flex flex-row justify-content-end mb-4 pt-1">
						<div>
							<p class="small p-2 mb-3 rounded-3 bg-primary text-white">
								${message}
							</p>
						</div>
					</div>`
							: `<div class="d-flex flex-row justify-content-start mb-4 pt-1">
						<div>

					 <p
							class="small p-2 mb-3 rounded-3"
							style="background-color: #f5f6f7"
						>	
								${message}
							</p>
						</div>
					</div>`
					}

				</div>`;

		messages.insertAdjacentHTML('beforeend', template);
	};

	socket.on('message-to-room', (msg) => {
		const { username, text } = msg;
		renderMessage({ username, message: text, user: false });
		cardBody.scrollTop = cardBody.scrollHeight + cardBody.clientHeight;
	});

	btnSend.addEventListener('click', () => {
		renderMessage({
			username: socket.id,
			message: inputText.value,
			user: true,
		});
		socket.emit('message-to-room', {
			username: socket.id,
			text: inputText.value,
		});
		inputText.value = '';
		cardBody.scrollTop = cardBody.scrollHeight + cardBody.clientHeight;
	});
</script>
<%- include('../layout/end') %>
